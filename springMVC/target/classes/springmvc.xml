<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.zookao.boot.controller"/>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--
    注解驱动
    通过执行HttpMessageConverter每个实现对象的canWrite()方法，再通过write()方法，将数据转换为json，xml，text等等
    再通过@ResponseBody注解，将json输出，response.getWriter()
    -->
    <mvc:annotation-driven/>
    <!--处理静态资源的前提，org.springframework.web.servlet.DispatcherServlet需要将url-pattern设置为 / -->
    <!--第一种处理静态资源的方式-->
    <!--加入这个标签后，框架会创建控制器对象DefualtServletHttpRequestHandler（类似controller）-->
    <!--这个对象会将请求转发给tomcat的default servlet-->
    <!--default-servlet-handler与requestmapping注解有冲突，需要加入annotation-driven解决-->
    <mvc:default-servlet-handler/>

    <!--第二种处理静态资源的方式-->
    <!--框架会创建ResourceHttpRequestHanlder，不依赖tomcat-->
    <!--<mvc:resources mapping="/images/**" location="/images/"/>-->
    <mvc:resources mapping="/statics/**" location="/statics/"/>
</beans>